Sub splitRawData()    'Made by Eric Zhou Co-op Student - 04/11/2023    Application.EnableEvents = False    Application.ScreenUpdating = False    Application.DisplayAlerts = False        'Declare variables    Dim filePath As String    Dim fileName As String    Dim targetWorkbook As Workbook        'Prompt user to select Excel file    filePath = Application.GetOpenFilename("Excel Files (*.xls*), *.xls*")        'Exit sub if user cancels file selection    If filePath = "False" Then Exit Sub        'Open selected workbook    Set targetWorkbook = Workbooks.Open(filePath)        'Run formatting macros here    'For example, to format the first sheet in the workbook:    Call createContactList        'Save and close workbook    targetWorkbook.Close SaveChanges:=False            Application.ScreenUpdating = True    Application.EnableEvents = True    Application.DisplayAlerts = True        End SubSub createContactList()    Dim ws1 As Worksheet, ws2 As Worksheet, LR As Long    Dim fullNameList As Variant, transitionList As Variant, positionList As Variant, phoneNumberList As Variant    Dim orgDict As Object    Dim positionDepartment As Long    Dim FullName As String, incumbencyStatus As String, expectedReturnDate As String, classDescription As String        Set orgDict = CreateObject("Scripting.Dictionary")        ' initialize empty dictionary values as arrays    'Add Orgs    orgDict.Add "Director_fullName", Array()    orgDict.Add "Director_position", Array()    orgDict.Add "Director_deptID", Array()    orgDict.Add "Director_positionNumber", Array()    orgDict.Add "Director_jobCode", Array()    orgDict.Add "Director_reportsTo", Array()        orgDict.Add "Manager_fullName", Array()    orgDict.Add "Manager_position", Array()    orgDict.Add "Manager_deptID", Array()    orgDict.Add "Manager_positionNumber", Array()    orgDict.Add "Manager_jobCode", Array()    orgDict.Add "Manager_reportsTo", Array()        orgDict.Add "OCIA_fullName", Array()    orgDict.Add "OCIA_position", Array()    orgDict.Add "OCIA_deptID", Array()    orgDict.Add "OCIA_positionNumber", Array()    orgDict.Add "OCIA_jobCode", Array()    orgDict.Add "OCIA_reportsTo", Array()        orgDict.Add "ATPAPMB_fullName", Array()    orgDict.Add "ATPAPMB_position", Array()    orgDict.Add "ATPAPMB_deptID", Array()    orgDict.Add "ATPAPMB_positionNumber", Array()    orgDict.Add "ATPAPMB_jobCode", Array()    orgDict.Add "ATPAPMB_reportsTo", Array()        orgDict.Add "CAB_fullName", Array()    orgDict.Add "CAB_position", Array()    orgDict.Add "CAB_deptID", Array()    orgDict.Add "CAB_positionNumber", Array()    orgDict.Add "CAB_jobCode", Array()    orgDict.Add "CAB_reportsTo", Array()        orgDict.Add "CENAB_fullName", Array()    orgDict.Add "CENAB_position", Array()    orgDict.Add "CENAB_deptID", Array()    orgDict.Add "CENAB_positionNumber", Array()    orgDict.Add "CENAB_jobCode", Array()    orgDict.Add "CENAB_reportsTo", Array()        orgDict.Add "CSAB_fullName", Array()    orgDict.Add "CSAB_position", Array()    orgDict.Add "CSAB_deptID", Array()    orgDict.Add "CSAB_positionNumber", Array()    orgDict.Add "CSAB_jobCode", Array()    orgDict.Add "CSAB_reportsTo", Array()        orgDict.Add "EAB_fullName", Array()    orgDict.Add "EAB_position", Array()    orgDict.Add "EAB_deptID", Array()    orgDict.Add "EAB_positionNumber", Array()    orgDict.Add "EAB_jobCode", Array()    orgDict.Add "EAB_reportsTo", Array()        orgDict.Add "EWDSAB_fullName", Array()    orgDict.Add "EWDSAB_position", Array()    orgDict.Add "EWDSAB_deptID", Array()    orgDict.Add "EWDSAB_positionNumber", Array()    orgDict.Add "EWDSAB_jobCode", Array()    orgDict.Add "EWDSAB_reportsTo", Array()        orgDict.Add "EWI&IT_fullName", Array()    orgDict.Add "EWI&IT_position", Array()    orgDict.Add "EWI&IT_deptID", Array()    orgDict.Add "EWI&IT_positionNumber", Array()    orgDict.Add "EWI&IT_jobCode", Array()    orgDict.Add "EWI&IT_reportsTo", Array()        orgDict.Add "FIT_fullName", Array()    orgDict.Add "FIT_position", Array()    orgDict.Add "FIT_deptID", Array()    orgDict.Add "FIT_positionNumber", Array()    orgDict.Add "FIT_jobCode", Array()    orgDict.Add "FIT_reportsTo", Array()        orgDict.Add "HAB_fullName", Array()    orgDict.Add "HAB_position", Array()    orgDict.Add "HAB_deptID", Array()    orgDict.Add "HAB_positionNumber", Array()    orgDict.Add "HAB_jobCode", Array()    orgDict.Add "HAB_reportsTo", Array()        orgDict.Add "JAB_fullName", Array()    orgDict.Add "JAB_position", Array()    orgDict.Add "JAB_deptID", Array()    orgDict.Add "JAB_positionNumber", Array()    orgDict.Add "JAB_jobCode", Array()    orgDict.Add "JAB_reportsTo", Array()        orgDict.Add "DACoE_fullName", Array()    orgDict.Add "DACoE_position", Array()    orgDict.Add "DACoE_deptID", Array()    orgDict.Add "DACoE_positionNumber", Array()    orgDict.Add "DACoE_jobCode", Array()    orgDict.Add "DACoE_reportsTo", Array()        orgDict.Add "RAB_fullName", Array()    orgDict.Add "RAB_position", Array()    orgDict.Add "RAB_deptID", Array()    orgDict.Add "RAB_positionNumber", Array()    orgDict.Add "RAB_jobCode", Array()    orgDict.Add "RAB_reportsTo", Array()        Set ws1 = Sheets("Raw Data")        LR = ws1.Range("D" & Rows.Count).End(xlUp).Row        For i = 2 To LR            firstName = ws1.Range("AW" & i).value        lastName = ws1.Range("AX" & i).value        FullName = firstName & " " & lastName        Position = ws1.Range("H" & i).value        'businessPhone = ws1.Range("CN" & i).value        departmentID = ws1.Range("E" & i).value        jobCode = ws1.Range("Z" & i).value        positionNumber = ws1.Range("G" & i).value        reportsTo = ws1.Range("AH" & i).value        positionDepartment = ws1.Range("E" & i).value        branchName = findBranchName(positionDepartment)                'Cell Values in column "AR" have random end spaces        incumbencyStatus = Left(ws1.Range("AR" & i).value, 3)        expectedReturnDate = ws1.Range("BU" & i).value        classDescription = ws1.Range("BE" & i).value                'Add (A/O),(A/I) and (LoA), (FxT) to FullName        FullName = addStatusToName(FullName, incumbencyStatus, expectedReturnDate, classDescription)                'Add anyone that is a director into director dictionary        If InStr(Position, "Director") Or Position = "Chief Internal Auditor" Or Position = "Chief Internal Auditor/ADM" Then            Set orgDict = AddToDictionary(orgDict, "Director_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "Director_position", Position)            Set orgDict = AddToDictionary(orgDict, "Director_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "Director_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "Director_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "Director_reportsTo", reportsTo)                'Add anyone that is a manager into manager dictionary        ElseIf (InStr(Position, "Manager") Or InStr(Position, "Mgr") Or Position = "Exec. Lead & Strategic Advisor") And Position <> "Audit Project Manager" And InStr(Position, "LTIP") = 0 Then            Set orgDict = AddToDictionary(orgDict, "Manager_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "Manager_position", Position)            Set orgDict = AddToDictionary(orgDict, "Manager_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "Manager_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "Manager_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "Manager_reportsTo", reportsTo)                End If                'Adds everyone in dictionary based on branch, leaves out LTIP, Students, Assistants and Interns        If branchName = "OCIA" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then                        Set orgDict = AddToDictionary(orgDict, "OCIA_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "OCIA_position", Position)            Set orgDict = AddToDictionary(orgDict, "OCIA_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "OCIA_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "OCIA_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "OCIA_reportsTo", reportsTo)                    ElseIf branchName = "ATPAPMB" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "ATPAPMB_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "ATPAPMB_position", Position)            Set orgDict = AddToDictionary(orgDict, "ATPAPMB_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "ATPAPMB_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "ATPAPMB_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "ATPAPMB_reportsTo", reportsTo)        ElseIf branchName = "CAPAB" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "CAB_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "CAB_position", Position)            Set orgDict = AddToDictionary(orgDict, "CAB_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "CAB_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "CAB_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "CAB_reportsTo", reportsTo)        ElseIf branchName = "CENAB" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "CENAB_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "CENAB_position", Position)            Set orgDict = AddToDictionary(orgDict, "CENAB_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "CENAB_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "CENAB_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "CENAB_reportsTo", reportsTo)        ElseIf branchName = "CSAB" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "CSAB_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "CSAB_position", Position)            Set orgDict = AddToDictionary(orgDict, "CSAB_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "CSAB_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "CSAB_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "CSAB_reportsTo", reportsTo)        ElseIf branchName = "EAB" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "EAB_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "EAB_position", Position)            Set orgDict = AddToDictionary(orgDict, "EAB_deptID", departmentID)           Set orgDict = AddToDictionary(orgDict, "EAB_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "EAB_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "EAB_reportsTo", reportsTo)        ElseIf branchName = "EWDSAB" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "EWDSAB_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "EWDSAB_position", Position)            Set orgDict = AddToDictionary(orgDict, "EWDSAB_deptID", departmentID)           Set orgDict = AddToDictionary(orgDict, "EWDSAB_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "EWDSAB_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "EWDSAB_reportsTo", reportsTo)        ElseIf branchName = "EWI&IT" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "EWI&IT_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "EWI&IT_position", Position)            Set orgDict = AddToDictionary(orgDict, "EWI&IT_deptID", departmentID)           Set orgDict = AddToDictionary(orgDict, "EWI&IT_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "EWI&IT_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "EWI&IT_reportsTo", reportsTo)        ElseIf branchName = "FIT" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "FIT_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "FIT_position", Position)            Set orgDict = AddToDictionary(orgDict, "FIT_deptID", departmentID)           Set orgDict = AddToDictionary(orgDict, "FIT_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "FIT_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "FIT_reportsTo", reportsTo)        ElseIf branchName = "HAB" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "HAB_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "HAB_position", Position)            Set orgDict = AddToDictionary(orgDict, "HAB_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "HAB_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "HAB_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "HAB_reportsTo", reportsTo)        ElseIf branchName = "JAB" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "JAB_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "JAB_position", Position)            Set orgDict = AddToDictionary(orgDict, "JAB_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "JAB_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "JAB_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "JAB_reportsTo", reportsTo)        ElseIf branchName = "DACoE" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "DACoE_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "DACoE_position", Position)            Set orgDict = AddToDictionary(orgDict, "DACoE_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "DACoE_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "DACoE_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "DACoE_reportsTo", reportsTo)       ElseIf branchName = "RAB" And InStr(Position, "LTIP") = 0 And InStr(Position, "Student") = 0 And InStr(Position, "Assistant") = 0 And InStr(" " & Position & " ", " Intern ") = 0 Then            Set orgDict = AddToDictionary(orgDict, "RAB_fullName", FullName)            Set orgDict = AddToDictionary(orgDict, "RAB_position", Position)            Set orgDict = AddToDictionary(orgDict, "RAB_deptID", departmentID)            Set orgDict = AddToDictionary(orgDict, "RAB_positionNumber", positionNumber)            Set orgDict = AddToDictionary(orgDict, "RAB_jobCode", jobCode)            Set orgDict = AddToDictionary(orgDict, "RAB_reportsTo", reportsTo)                        End If        Next i        CreateNewWorksheets orgDict    'PrintDictionaryValues orgDict, "EWDSAB"'PrintDictionaryValues orgDict, "OCIA_other"End SubFunction findBranchName(PS_DEPT As Long) As String'Takes in Position Department number and uses the hidden sheet Brnach Identifier (NEW) to determine which branch the person is in'Returns the branch StringDim ws As Worksheet, FindRow As LongSet ws = Sheets("Branch Identifier (NEW)")FindRow = ws.Range("B:B").Find(What:=PS_DEPT, LookIn:=xlValues).Rowbranch = ws.Cells(FindRow, 3).valuefindBranchName = branchEnd FunctionFunction AddToDictionary(orgDict As Object, key As String, value As Variant) As Object    Dim transitionList As Variant    transitionList = orgDict(key)    ReDim Preserve transitionList(UBound(transitionList) + 1)    transitionList(UBound(transitionList)) = value    orgDict(key) = transitionList    Set AddToDictionary = orgDictEnd FunctionFunction addStatusToName(FullName As String, incumbencyStatus As String, expectedReturnDate As String, classDescription As String) As String    If incumbencyStatus = "OUT" Then        FullName = FullName & " (A/O)"            ElseIf incumbencyStatus = "IN " Then        FullName = FullName & " (A/I)"            ElseIf expectedReturnDate <> "" Then        FullName = FullName & " (LoA)"        ElseIf classDescription = "Fixed Term" Then        FullName = FullName & " (FxT)"            End If        addStatusToName = FullNameEnd FunctionSub PrintDictionaryValues(orgDict As Object, dictKey As String)    Dim fullNameKey As String, positionKey As String, departmentIDKey As String, positionNumberKey As String, jobCodeKey As String    Dim reportsToKey As String    Dim ws As Worksheet    Set ws = ActiveSheet    fullNameKey = dictKey & "_fullName"    positionKey = dictKey & "_position"    departmentIDKey = dictKey & "_deptID"    positionNumberKey = dictKey & "_positionNumber"    jobCodeKey = dictKey & "_jobCode"    reportsToKey = dictKey & "_reportsTo"    Dim dataArr As Variant    dataArr = Application.Transpose(Array(orgDict(fullNameKey), orgDict(positionKey), orgDict(departmentIDKey), orgDict(positionNumberKey), orgDict(jobCodeKey), orgDict(reportsToKey)))    ws.Range("A2:F" & UBound(dataArr, 1) + 1) = dataArrEnd SubSub CreateNewWorksheets(orgDict As Object)    ' Create a new workbook    Dim newWorkbook As Workbook    Set newWorkbook = Workbooks.Add        Set dict = CreateObject("Scripting.Dictionary")    dict.Add 0, "Director"    dict.Add 1, "Manager"    dict.Add 2, "OCIA"    dict.Add 3, "ATPAPMB"    dict.Add 4, "CAB"    dict.Add 5, "CENAB"    dict.Add 6, "CSAB"    dict.Add 7, "EAB"    dict.Add 8, "EWDSAB"    dict.Add 9, "EWI&IT"    dict.Add 10, "FIT"    dict.Add 11, "HAB"    dict.Add 12, "JAB"    dict.Add 13, "DACoE"    dict.Add 14, "RAB"    For i = 0 To 14                'Copy rows from Director sheet into Manager sheet        If i = 1 Then            newWorkbook.Sheets.Add.name = dict(i)            newWorkbook.Sheets(dict(i)).Move After:=Worksheets(Worksheets.Count)            newWorkbook.Sheets(dict(i)).Range("A1") = "Name"            newWorkbook.Sheets(dict(i)).Range("B1") = "Position Title"            newWorkbook.Sheets(dict(i)).Range("C1") = "Department ID"            newWorkbook.Sheets(dict(i)).Range("D1") = "Position Number"            newWorkbook.Sheets(dict(i)).Range("E1") = "Job Code"            newWorkbook.Sheets(dict(i)).Range("F1") = "Reports to"            PrintDictionaryValues orgDict, CStr(dict(i))            Call CombineDirectorsToManagers            Call CombineAndDeleteDuplicates            Call HighlightMissingNumbers            newWorkbook.Sheets(dict(i)).Columns("A:F").AutoFit                Else            newWorkbook.Sheets.Add.name = dict(i)            newWorkbook.Sheets(dict(i)).Move After:=Worksheets(Worksheets.Count)            newWorkbook.Sheets(dict(i)).Range("A1") = "Name"            newWorkbook.Sheets(dict(i)).Range("B1") = "Position Title"            newWorkbook.Sheets(dict(i)).Range("C1") = "Department ID"            newWorkbook.Sheets(dict(i)).Range("D1") = "Position Number"            newWorkbook.Sheets(dict(i)).Range("E1") = "Job Code"            newWorkbook.Sheets(dict(i)).Range("F1") = "Reports to"            PrintDictionaryValues orgDict, CStr(dict(i))            Call CombineAndDeleteDuplicates            Call HighlightMissingNumbers            newWorkbook.Sheets(dict(i)).Columns("A:F").AutoFit        End If    Next i        Application.DisplayAlerts = False    newWorkbook.Sheets("Sheet1").Delete    Application.DisplayAlerts = TrueEnd SubSub HighlightMissingNumbers()'Highlights any number in column F that don't show up in column D    ' Define variables    Dim lastRowD As Long    Dim lastRowF As Long    Dim rngD As Range    Dim rngF As Range    Dim cellF As Range    Dim searchResult As Range        ' Get the last row in columns D and F    lastRowD = Range("D" & Rows.Count).End(xlUp).Row    lastRowF = Range("F" & Rows.Count).End(xlUp).Row        ' Set the ranges for columns D and F    Set rngD = Range("D2:D" & lastRowD)    Set rngF = Range("F2:F" & lastRowF)        ' Loop through each cell in column F    For Each cellF In rngF        ' Search for the cell value in column D        Set searchResult = rngD.Find(cellF.value, LookIn:=xlValues, LookAt:=xlWhole)        ' If the search result is Nothing, the value was not found in column D        If searchResult Is Nothing Then            ' Highlight the cell in column F            cellF.Interior.Color = vbYellow        End If    Next cellF    End SubSub CombineAndDeleteDuplicates()'Combines any duplicate numbers in column D, it combines the names together seperated with a ','    ' Define variables    Dim lastRow As Long    Dim rng As Range    Dim cell As Range    Dim dict As Object        ' Create a dictionary to store the row number and first value for each unique position number    Set dict = CreateObject("Scripting.Dictionary")        ' Get the last row in column D    lastRow = Range("D" & Rows.Count).End(xlUp).Row        ' Set the range for column D    Set rng = Range("D1:D" & lastRow)        ' Loop through the range in reverse order and combine values for duplicates    For i = lastRow To 2 Step -1        Set cell = Range("D" & i)        If Not dict.exists(cell.value) Then            ' First occurrence of this value, add the row number and corresponding value in column A to the dictionary            dict.Add cell.value, cell.Row        Else            ' This value already exists, combine the values and delete the row            Range("A" & dict(cell.value)).value = Range("A" & dict(cell.value)).value & ", " & Range("A" & cell.Row).value             Range("A" & dict(cell.value)).Interior.Color = vbYellow            cell.EntireRow.Delete        End If    Next i    End SubSub CombineDirectorsToManagers()    ' Set the sheet names and range to copy    Dim directorsSheet As Worksheet    Dim managersSheet As Worksheet    Dim directorsRange As Range    Set directorsSheet = Sheets("Director")    Set managersSheet = Sheets("Manager")    Set directorsRange = directorsSheet.Range("A2:F" & directorsSheet.Cells(directorsSheet.Rows.Count, "F").End(xlUp).Row)        ' Determine where to paste the copied data    Dim lastRow As Long    lastRow = managersSheet.Cells(managersSheet.Rows.Count, "A").End(xlUp).Row + 1        ' Copy and paste the data    directorsRange.Copy    managersSheet.Range("A" & lastRow).PasteSpecial xlPasteValues        ' Clear the clipboard and notify the user    Application.CutCopyMode = False    End Sub